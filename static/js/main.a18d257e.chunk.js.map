{"version":3,"sources":["types/enum.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","isTodoSelected","cn","type","onClick","TodoFilter","query","onQueryChange","filterParam","onFilterChange","onSubmit","event","preventDefault","value","onChange","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","isLoading","href","email","name","App","useState","setTodos","setFilterParam","setQuery","setIsLoading","setUser","useEffect","catch","error","console","warn","finally","userId","filteredTodos","useMemo","filtered","filter","trim","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a18d257e.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n        const isTodoSelected = selectedTodo?.id === id;\n\n        return (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn({\n                    'far fa-eye': !isTodoSelected,\n                    'far fa-eye-slash': isTodoSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { TodoStatus } from '../../types/enum';\n\ntype Props = {\n  query: string,\n  onQueryChange: (newQuery: string) => void,\n  filterParam: string,\n  onFilterChange: (newFilterParam: TodoStatus) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  filterParam,\n  onFilterChange,\n}) => {\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handleSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterParam}\n            onChange={event => onFilterChange(event.target.value as TodoStatus)}\n          >\n            <option value={TodoStatus.All}>All</option>\n            <option value={TodoStatus.Active}>Active</option>\n            <option value={TodoStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onQueryChange(event.target.value)}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader: React.FC = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { Todo } from './types/Todo';\r\nimport { User } from './types/User';\r\n\r\n// eslint-disable-next-line max-len\r\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\r\n\r\n// This function creates a promise\r\n// that is resolved after a given delay\r\nfunction wait(delay: number): Promise<void> {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction get<T>(url: string): Promise<T> {\r\n  // eslint-disable-next-line prefer-template\r\n  const fullURL = BASE_URL + url + '.json';\r\n\r\n  // we add some delay to see how the loader works\r\n  return wait(300)\r\n    .then(() => fetch(fullURL))\r\n    .then(res => res.json());\r\n}\r\n\r\nexport const getTodos = () => get<Todo[]>('/todos');\r\n\r\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\r\n","import React from 'react';\n\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null,\n  selectedTodo: Todo,\n  setSelectedTodo: ((todo: Todo | null) => void)\n  isLoading: boolean,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  selectedTodo,\n  setSelectedTodo,\n  isLoading,\n}) => {\n  const { id, title, completed } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading && <Loader />}\n\n      {!isLoading && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { getTodos, getUser } from './api';\nimport { TodoStatus } from './types/enum';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterParam, setFilterParam] = useState<TodoStatus>(TodoStatus.All);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setIsLoading(true);\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.warn(error);\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [selectedTodo]);\n\n  const filteredTodos = useMemo(() => {\n    let filtered = todos;\n\n    switch (filterParam) {\n      case TodoStatus.Active:\n        filtered = filtered.filter(todo => !todo.completed);\n        break;\n\n      case TodoStatus.Completed:\n        filtered = filtered.filter(todo => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    if (query.trim()) {\n      filtered = filtered.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    return filtered;\n  }, [todos, filterParam, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filterParam={filterParam}\n                onFilterChange={setFilterParam}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && !selectedTodo\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          user={user}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          isLoading={isLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}